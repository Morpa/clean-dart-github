// Mocks generated by Mockito 5.3.0 from annotations
// in github_commons/test/domain/usecases/find_repositories/find_repositories_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:github_commons/main.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGithubProfileEntity_0 extends _i1.SmartFake
    implements _i2.GithubProfileEntity {
  _FakeGithubProfileEntity_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GithubRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGithubRepository extends _i1.Mock implements _i2.GithubRepository {
  MockGithubRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.GithubProfileEntity> findProfile(String? username) =>
      (super.noSuchMethod(Invocation.method(#findProfile, [username]),
              returnValue: _i3.Future<_i2.GithubProfileEntity>.value(
                  _FakeGithubProfileEntity_0(
                      this, Invocation.method(#findProfile, [username]))))
          as _i3.Future<_i2.GithubProfileEntity>);
  @override
  _i3.Future<List<_i2.GithubRepositoryEntity>> findRepositories(
          String? username) =>
      (super.noSuchMethod(Invocation.method(#findRepositories, [username]),
              returnValue: _i3.Future<List<_i2.GithubRepositoryEntity>>.value(
                  <_i2.GithubRepositoryEntity>[]))
          as _i3.Future<List<_i2.GithubRepositoryEntity>>);
}
