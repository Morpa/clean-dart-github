// Mocks generated by Mockito 5.3.2 from annotations
// in github_commons/test/infra/repositories/github_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:github_commons/module/external/datasources/github_datasource.dart'
    as _i3;
import 'package:github_commons/module/infra/models/github_profile_model.dart'
    as _i2;
import 'package:github_commons/module/infra/models/github_repository_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGithubProfileModel_0 extends _i1.SmartFake
    implements _i2.GithubProfileModel {
  _FakeGithubProfileModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GithubDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGithubDatasource extends _i1.Mock implements _i3.GithubDatasource {
  MockGithubDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GithubProfileModel> getProfile(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [username],
        ),
        returnValue:
            _i4.Future<_i2.GithubProfileModel>.value(_FakeGithubProfileModel_0(
          this,
          Invocation.method(
            #getProfile,
            [username],
          ),
        )),
      ) as _i4.Future<_i2.GithubProfileModel>);
  @override
  _i4.Future<List<_i5.GithubRepositoryModel>> getRepositories(
          String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRepositories,
          [username],
        ),
        returnValue: _i4.Future<List<_i5.GithubRepositoryModel>>.value(
            <_i5.GithubRepositoryModel>[]),
      ) as _i4.Future<List<_i5.GithubRepositoryModel>>);
}
